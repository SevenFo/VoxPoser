objects = ['bin', 'rubbish', 'tomato1', 'tomato2']
# Query: throw away the trash, leaving any other objects alone.
composer("grasp the rubbish")
composer("move to the top of the bin")
composer("open gripper")
# done
    # Query: grasp the rubbish.
    movable = parse_query_obj('gripper')
    affordance_map = get_affordance_map('a point at the center of the rubbish')
    gripper_map = get_gripper_map('open everywhere except 1cm around the rubbish')
    execute(movable, affordance_map=affordance_map, gripper_map=gripper_map)
        objects = ['bin', 'rubbish', 'tomato1', 'tomato2']
        # Query: gripper.
        gripper = detect('gripper')
        ret_val = gripper
        # Query: a point at the center of the rubbish.
        affordance_map = get_empty_affordance_map()
        rubbish = parse_query_obj('rubbish')
        center_x, center_y, center_z = rubbish.position
        affordance_map[center_x, center_y, center_z] = 1
        ret_val = affordance_map
        # Query: open everywhere except 1cm around the rubbish.
        gripper_map = get_empty_gripper_map()
        # open everywhere
        gripper_map[:, :, :] = 1
        # close when 1cm around the rubbish
        rubbish = parse_query_obj('rubbish')
        set_voxel_by_radius(gripper_map, rubbish.position, radius_cm=1, value=0)
        ret_val = gripper_map
            objects = ['bin', 'rubbish', 'tomato1', 'tomato2']
            # Query: rubbish.
            rubbish = detect('rubbish')
            ret_val = rubbish
            objects = ['bin', 'rubbish', 'tomato1', 'tomato2']
            # Query: rubbish.
            rubbish = detect('rubbish')
            ret_val = rubbish
    # Query: move to the top of the bin.
    movable = parse_query_obj('gripper')
    affordance_map = get_affordance_map('a point 10cm above the bin')
    execute(movable, affordance_map=affordance_map)
        objects = ['bin', 'rubbish', 'tomato1', 'tomato2']
        # Query: gripper.
        gripper = detect('gripper')
        ret_val = gripper
        # Query: a point 10cm above the bin.
        affordance_map = get_empty_affordance_map()
        bin_obj = parse_query_obj('bin')
        (min_x, min_y, min_z), (max_x, max_y, max_z) = bin_obj.aabb
        center_x, center_y, center_z = bin_obj.position
        # 10cm above so we add to z-axis
        x = center_x
        y = center_y
        z = max_z + cm2index(10, 'z')
        affordance_map[x, y, z] = 1
        ret_val = affordance_map
            objects = ['bin', 'rubbish', 'tomato1', 'tomato2']
            # Query: bin.
            bin = detect('bin')
            ret_val = bin
    # Query: open gripper.
    execute(parse_query_obj('gripper'), gripper_map=get_gripper_map('open everywhere'))
        objects = ['bin', 'rubbish', 'tomato1', 'tomato2']
        # Query: gripper.
        gripper = detect('gripper')
        ret_val = gripper
        # Query: open everywhere.
        gripper_map = get_empty_gripper_map()
        # open everywhere
        gripper_map[:, :, :] = 1
        ret_val = gripper_map
